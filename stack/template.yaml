AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  simple-reminder

  Sample SAM Template for simple-reminder

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  WebAppBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketName: !Sub "simple-reminders-app-bucket-${AWS::AccountId}-${AWS::Region}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter
      # AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  WebAppBucketPolicy:
    Type: AWS::S3::BucketPolicy
    DeletionPolicy: Delete
    Properties:
      Bucket: !Ref WebAppBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action: s3:GetObject
            Resource: !Sub "arn:aws:s3:::${WebAppBucket}/*"

  SimpleReminderAPI:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/
      Handler: app.handler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        AnyPath:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /{proxy+}
            Method: any
      Environment:
        Variables:
          DYNAMO_ENDPOINT: http://host.docker.internal:8000
      Policies:
        - DynamoDBCrudPolicy:
            TableName: Reminders
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - app.ts

  RemindersTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: Reminders
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  SimpleReminderApiGateway:
    Description: "API Gateway endpoint URL for Prod stage for SimpleReminder function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  SimpleReminderFunction:
    Description: "SimpleReminder Lambda Function ARN"
    Value: !GetAtt SimpleReminderAPI.Arn
  SimpleReminderFunctionIamRole:
    Description: "Implicit IAM Role created for SimpleReminder function"
    Value: !GetAtt SimpleReminderAPIRole.Arn
  WebAppBucketURL:
    Description: "URL for the S3 bucket hosting the React application"
    Value: !Sub "http://${WebAppBucket}.s3-website.${AWS::Region}.amazonaws.com"
